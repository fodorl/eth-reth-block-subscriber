services:
  block-subscriber:
    build: .
    container_name: reth-ws-block-subscriber
    volumes:
      - ./logs:/app/logs
      - ./config.yaml:/app/config.yaml
    environment:
      - CONFIG_PATH=/app/config.yaml
      - METRICS_PORT=8000
    restart: unless-stopped
    networks:
      - ethereum-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8000:8000"  # Expose metrics port for Prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: reth-ws-prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - ethereum-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "9090:9090"  # Expose Prometheus UI to the host (optional)
    depends_on:
      - block-subscriber
  
  grafana:
    image: grafana/grafana:latest
    container_name: reth-ws-grafana
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - ethereum-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "3000:3000"  # Expose Grafana UI to the host
    depends_on:
      - prometheus

volumes:
  prometheus-data:
  grafana-data:

networks:
  ethereum-network:
    driver: bridge
